// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: kubepb/deploy.proto

package kubepb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeployManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerName   string   `protobuf:"bytes,1,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerType   string   `protobuf:"bytes,2,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty"`
	DeploymentType string   `protobuf:"bytes,3,opt,name=deployment_type,json=deploymentType,proto3" json:"deployment_type,omitempty"`
	Products       []string `protobuf:"bytes,4,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *DeployManifest) Reset() {
	*x = DeployManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubepb_deploy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployManifest) ProtoMessage() {}

func (x *DeployManifest) ProtoReflect() protoreflect.Message {
	mi := &file_kubepb_deploy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployManifest.ProtoReflect.Descriptor instead.
func (*DeployManifest) Descriptor() ([]byte, []int) {
	return file_kubepb_deploy_proto_rawDescGZIP(), []int{0}
}

func (x *DeployManifest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *DeployManifest) GetCustomerType() string {
	if x != nil {
		return x.CustomerType
	}
	return ""
}

func (x *DeployManifest) GetDeploymentType() string {
	if x != nil {
		return x.DeploymentType
	}
	return ""
}

func (x *DeployManifest) GetProducts() []string {
	if x != nil {
		return x.Products
	}
	return nil
}

type DeployRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployRequest) Reset() {
	*x = DeployRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubepb_deploy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployRequest) ProtoMessage() {}

func (x *DeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubepb_deploy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployRequest.ProtoReflect.Descriptor instead.
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return file_kubepb_deploy_proto_rawDescGZIP(), []int{1}
}

type DeployResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployManifest *DeployManifest `protobuf:"bytes,1,opt,name=deployManifest,proto3" json:"deployManifest,omitempty"`
}

func (x *DeployResponse) Reset() {
	*x = DeployResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubepb_deploy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployResponse) ProtoMessage() {}

func (x *DeployResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubepb_deploy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployResponse.ProtoReflect.Descriptor instead.
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return file_kubepb_deploy_proto_rawDescGZIP(), []int{2}
}

func (x *DeployResponse) GetDeployManifest() *DeployManifest {
	if x != nil {
		return x.DeployManifest
	}
	return nil
}

var File_kubepb_deploy_proto protoreflect.FileDescriptor

var file_kubepb_deploy_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x22, 0x9f, 0x01,
	0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22,
	0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x50, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x32, 0x4a, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x15, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x3b, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_kubepb_deploy_proto_rawDescOnce sync.Once
	file_kubepb_deploy_proto_rawDescData = file_kubepb_deploy_proto_rawDesc
)

func file_kubepb_deploy_proto_rawDescGZIP() []byte {
	file_kubepb_deploy_proto_rawDescOnce.Do(func() {
		file_kubepb_deploy_proto_rawDescData = protoimpl.X.CompressGZIP(file_kubepb_deploy_proto_rawDescData)
	})
	return file_kubepb_deploy_proto_rawDescData
}

var file_kubepb_deploy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kubepb_deploy_proto_goTypes = []interface{}{
	(*DeployManifest)(nil), // 0: deploy.DeployManifest
	(*DeployRequest)(nil),  // 1: deploy.DeployRequest
	(*DeployResponse)(nil), // 2: deploy.DeployResponse
}
var file_kubepb_deploy_proto_depIdxs = []int32{
	0, // 0: deploy.DeployResponse.deployManifest:type_name -> deploy.DeployManifest
	1, // 1: deploy.DeployService.Deploy:input_type -> deploy.DeployRequest
	2, // 2: deploy.DeployService.Deploy:output_type -> deploy.DeployResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kubepb_deploy_proto_init() }
func file_kubepb_deploy_proto_init() {
	if File_kubepb_deploy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kubepb_deploy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubepb_deploy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubepb_deploy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kubepb_deploy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kubepb_deploy_proto_goTypes,
		DependencyIndexes: file_kubepb_deploy_proto_depIdxs,
		MessageInfos:      file_kubepb_deploy_proto_msgTypes,
	}.Build()
	File_kubepb_deploy_proto = out.File
	file_kubepb_deploy_proto_rawDesc = nil
	file_kubepb_deploy_proto_goTypes = nil
	file_kubepb_deploy_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeployServiceClient is the client API for DeployService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeployServiceClient interface {
	Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (DeployService_DeployClient, error)
}

type deployServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeployServiceClient(cc grpc.ClientConnInterface) DeployServiceClient {
	return &deployServiceClient{cc}
}

func (c *deployServiceClient) Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (DeployService_DeployClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeployService_serviceDesc.Streams[0], "/deploy.DeployService/Deploy", opts...)
	if err != nil {
		return nil, err
	}
	x := &deployServiceDeployClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeployService_DeployClient interface {
	Recv() (*DeployResponse, error)
	grpc.ClientStream
}

type deployServiceDeployClient struct {
	grpc.ClientStream
}

func (x *deployServiceDeployClient) Recv() (*DeployResponse, error) {
	m := new(DeployResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DeployServiceServer is the server API for DeployService service.
type DeployServiceServer interface {
	Deploy(*DeployRequest, DeployService_DeployServer) error
}

// UnimplementedDeployServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeployServiceServer struct {
}

func (*UnimplementedDeployServiceServer) Deploy(*DeployRequest, DeployService_DeployServer) error {
	return status.Errorf(codes.Unimplemented, "method Deploy not implemented")
}

func RegisterDeployServiceServer(s *grpc.Server, srv DeployServiceServer) {
	s.RegisterService(&_DeployService_serviceDesc, srv)
}

func _DeployService_Deploy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeployRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeployServiceServer).Deploy(m, &deployServiceDeployServer{stream})
}

type DeployService_DeployServer interface {
	Send(*DeployResponse) error
	grpc.ServerStream
}

type deployServiceDeployServer struct {
	grpc.ServerStream
}

func (x *deployServiceDeployServer) Send(m *DeployResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DeployService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "deploy.DeployService",
	HandlerType: (*DeployServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Deploy",
			Handler:       _DeployService_Deploy_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "kubepb/deploy.proto",
}
